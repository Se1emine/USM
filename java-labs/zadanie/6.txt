Лабораторная работа №6. Создание нитей процессов (Threads)
Требования к программе:

1.    Данные вводятся с клавиатуры. Имеется защита от неправильного ввода.
2.    Исходные данные и результат выводятся на экран монитора.
3.    Программа тестируется на нескольких различных примерах.
4.    Работа в параллельных процессах не дублируется. Вычислительная нагрузка на каждый процесс примерно одинакова. 
5.    Результаты выводить в процессе main. В начале программы вывести на консоль число доступных процессоров на компьютере.
Пояснение:
The number of processors is basically the number of execution engines capable of running your code. availableProcessors() is a method that returns the number of processors currently available to the JVM (number of logical cores on Windows and in other operating systems). In this context, a "processor" is "hardware capable of independent execution", i.e. a cpu core.
https://en.wikipedia.org/wiki/Intel_Core#Core_i5
https://ru.wikipedia.org/wiki/Hyper-threading


Варианты заданий.

1.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс ищет в векторе максимальный элемент;
2-ой процесс ищет в векторе минимальный элемент

2.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс подсчитывает количество слов в строке;
2-ой процесс подсчитывает количество слов Java в этой строке.

3.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс подсчитывает количество отрицательных элементов в векторе;
2-ой процесс сортирует элементы вектора в возрастающем порядке.

4.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит слово максимальной длины в строке;
2-ой процесс сортирует слова по возрастанию.

5.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс суммирует элементы главной диагонали матрицы;
2-ой процесс суммирует элементы побочной диагонали матрицы.

6.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит и выводит все отрицательные элементы матрицы;
2-ой процесс суммирует положительные элементы матрицы по строкам. 

7.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс складывает первую половину матрицы (4*4);
2-ой процесс складывает вторую половину этой же матрицы.

8.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс инвертирует первую половину строки;
2-ой процесс инвертирует вторую половину строки.

9.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит сумму первой половины числового вектора;
2-ой процесс находит произведение элементов второй половины.

10.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс ищет в массиве слово “Java”;
2-ой процесс ищет в массиве слово “JavaEE”.

11.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс суммирует матрицу по столбцам;
2-ой процесс суммирует матрицу по строкам.

12.    Необходимо перемножить две матрицы. 
Написать программу на Java с двумя нитями процессов: 
1-ый процесс занимается получением первой части результирующей матрицы;
2-ой процесс занимается получением второй части результирующей матрицы.

13.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит максимальное число во введенном векторе;
2-ой процесс подсчитывает сумму элементов вектора.

14.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит минимальное число во введенном векторе(матрице);
2-ой процесс сортирует по убыванию элементы вектора(матрицы).

15.    Имеется массив объектов, содержащий информацию о сотрудниках и их зарплате.
Написать программу на Java с двумя нитями процессов: 
1-ый процесс находит сотрудника с наименьшей зарплатой;
2-ой процесс находит всех сотрудников с зарплатой свыше 1000.

16.    Написать программу на Java с двумя нитями процессов: 
1-ый процесс подсчитывает количество букв «о» и «а» во введенной строке;
2-ой процесс выводит все слова на букву «о» из введенной строки.

17.    Вводится строка слов: целые числа и слова, составленные из букв.
Написать программу на Java с двумя нитями процессов: 
1-ый процесс формирует числовой вектор из чисел, записанных в строке;
2-ой процесс формирует строку слов исходной строки.
Указания: 1-ый процесс перехватывает исключения (NumberFormatException) в случае неудачной попытки преобразования символов в число. 

18.    Вводится строка слов: целые числа и слова, составленные из букв.
Написать программу на Java с двумя нитями процессов: 
1-ый процесс подсчитывает количество слов в строке;
2-ой процесс подсчитывает количество цифр в строке и их сумму.

19.    Вводится строка слов: целые числа и слова, составленные из букв.
Написать программу на Java с двумя нитями процессов: 
1-ый процесс выделяет цифры и буквы, встретившиеся в строке и подсчитывает сколько раз найденные символы встретились в строке;
2-ой процесс находит и выбирает из строки положительные числа и сортирует их по возрастанию.

20.    Даны две квадратные матрицы. Перемножить матрицы порядка n любым способом при помощи нескольких процессов.
Полезные ссылки:
1.В.А. Ильин, Г.Д. Ким. Линейная алгебра и аналитическая геометрия. М:, Изд-во МГУ, 1998, стр. 13,15. 
2.В.В. Воеводин. Вычислительные основы линейной алгебры. М:, Наука, 1977,стр.293-295. 

21.    Реализовать класс Mesager, который умеет отправлять и получать сообщения Mesager1 должен отправить сообщение Mesager2 с текстом “mesaj”, Mesager2 дополняет полученное сообщение счетчиком полученных сообщений и отправляет обратно, Mesager1 отвечает аналогично. Программа должна корректно завершиться, если Mesager1 получит 15 сообщений
Полезные ссылки:
https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/Exchanger.html

22.    Написать программу, в которой один процесс читает строки из файла и отдает их по очереди 3-м другим процессам. Процессы записывают строки в выходной файл и показывают их на консоли. К строкам добавляется префикс с номером процесса. Попутно процессы считают сколько раз встретилось слово весна в строках. В конце выводится число слов весна в файле. В качестве тестового файла используйте какое-нибудь стихотворение. (слово весна можно заменить на любое другое).
23.    Написать программу, которая позволяла бы работать с тремя файлами. Исходная информация должна храниться в файле file1.txt (программа ее считывает и осуществляет с ней преобразования), затем преобразованная информация записывается в файл file2.txt, а в файл file3.txt программа должна записать исходную и преобразованную информацию.Оформить работу программы как работу двух подсистем, которые могут 